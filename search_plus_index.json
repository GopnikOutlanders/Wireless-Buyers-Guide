{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction So you've finally installed macOS onto your desktop/laptop/smart fridge but you look towards the menubar and see a Bluetooth icon yet no wifi to go with. You immediately bolt to the Settings pane and see no wifi option and wonder where you may have gone wrong in your install. Scowering the inter-webs did provide an answer but it was not that which you wanted to hear, \"your wifi card is shit ANON!\" said some user on a forum with far too many ads and a broken layout. They then proceeded to tell you how stupid you were to even think your wireless card would work, \"how dare you not have the knowledge of Hackintosh hive mind\". Well you search for more definitive answers and finally drop onto this page hoping to clear things up "},"unsupported.html":{"url":"unsupported.html","title":"Supported/Unsupported Chipsets","keywords":"","body":"With macOS there's a limited amount of supported hardware regardless of which category and wireless cards are no different. Supported chipsets BCM94360CD BCM94331CD(May require you to force load kext when running Catalina) BCM94360CS2 BCM94352Z BCM94350ZAE High Sierra: BCM943224 AR9285 AR9287 AR9280 AR9380 Unsupported Chipsets So for some reason, people need a list of unsupported wireless cards just to reassure them that their EXACT model doesn't work. Well here's that list of all intel chips cause why not: Intel Wireless AX Intel® Wi-Fi 6 AX201 Intel® Wi-Fi 6 AX200 Intel Wireless AC Intel® Wireless-AC 9560 Intel® Wireless-AC 9462 Intel® Wireless-AC 9461 Intel® Wireless-AC 9260 Intel® Dual Band Wireless-AC 3168 Intel® Dual Band Wireless-AC 8265 Intel® Dual Band Wireless-AC 8260 Intel® Dual Band Wireless-AC 3165 Intel® Dual Band Wireless-AC 7265 Intel® Dual Band Wireless-AC 7260 Intel® Dual Band Wireless-AC 3160 Intel® Dual Band Wireless-AC 7260 Wireless N Intel® Dual Band Wireless-N 7265 Intel® Wireless-N 7265 Intel® Dual Band Wireless-N 7260 Intel® Wireless-N 7260 Intel® Centrino® Advanced-N 6230 Intel® Centrino® Wireless-N 1030 Intel® Centrino® Wireless-N 130 Intel® Centrino® Advanced-N 6235 Intel® Centrino® Wireless-N 135 Intel® Centrino® Wireless-N 105 Intel® Centrino® Wireless-N 2200 Intel® Centrino® Wireless-N 2230 Intel® Centrino® Wireless-N 1000 Intel® Centrino® Advanced-N 6205 Intel® Centrino® Wireless-N 100 Intel® Centrino® Wireless-N + WiMAX 6150 Intel® Centrino® Advanced-N + WiMAX 6250 Intel® Centrino® Ultimate-N 6300 Intel® Centrino® Advanced-N 6200 Intel® Wireless WiFi Link 5100AGN Intel® Wireless WiFi Link 5300AGN Intel® Wireless WiFi Link 5350AGN Intel® Wireless WiFi Link 5150AGN "},"Kext.html":{"url":"Kext.html","title":"When/What kexts to use","keywords":"","body":"When and what kexts to use? AirportBrcmFixup This is needed to fix wifi on many broadcom cards, while not all of them need them it's generally required when using non-apple manufactured wireless cards. This also has the added functionality of injecting old broadcom kexts into newer versions of macOS. Note: Apple Airport and Fenvi cards do not need this kext BrcmPatchRAM Required for all non-apple manufactured wireless cards due to how Firmware is handled. This is actually a bundle of multiple kexts: BrcmBluetoothInjector BrcmFirmwareData BrcmPatchRAM fix: BrcmPatchRAM3 for 10.14+ (must be paired with BrcmBluetoothInjector) BrcmPatchRAM2 for 10.11-10.14 BrcmPatchRAM for 10.10 or older Note: Apple Airport and Fenvi cards do not need these kexts OpenCore order is alphebtical: Injector -> Data -> RAM BT4LEContinuityFixup Needed to fix odd Continuity issues which allow for the use of: Handoff Instant Hotspot New Airdrop Apple Watch Unlock Generally unneeded so avoid use when you notice issues with your card Note: Apple Airport and Fenvi cards shouldn't need this kext Continuity requires a Bluetooth 4.0 Low Energy supported card AirPortAtheros40 This kext is required for all Atheros chipsets that had support dropped in Mojave, these include: AR9285 AR9287 AR9280 AR9380 To install the AirPortAtheros40, you have 2 methods: Kext injection via bootloader Installation into macOS(Library/Extensions) The first method is recommended, the second should be avoided but may work better for some users. Test injection first For macOS installation: You'll need to copy it to Library/Extensions(NOT System/Library/Extensions) and then run the following command: sudo chown -R root:wheel /L*/E*; sudo chmod -R 755 /L*/E*; sudo kextcache -i / Catalina users note: These methods no longer works without backporting the entire IO80211 framework, this is not ideal for stability reasons ATH9KFixup To be paired with AirPortAtheros40 to fix support for many atheros cards, similar idea to AirportBrcmFixup "},"Airport.html":{"url":"Airport.html","title":"Airport Adapters","keywords":"","body":"So what are Airport adapters and why are they the preferred piece of hardware? Well, they're genuine Apple Wireless cards pulled from MacBooks and iMacs meaning no extra configurations/kexts are required to get this hardware up and running. The main issue is that they require an adapter to PC hardware and are generally bulkier making them unfavourable in laptops but perfect for desktops. Best part, no kexts needed! What does an Airport adapted look like? "},"types-of-wireless-card/pcie.html":{"url":"types-of-wireless-card/pcie.html","title":"PCIe","keywords":"","body":"By far the most popular option for desktop users has been to buy an old Apple Aiport Wireless card and place it into a PCIe riser card. The benefits of this is that as long as the hardware works natively on a real mac it will work on without any kexts/framework modifications. With PCIe you have a couple of options: Apple Airport Card adapted to a full sized PCIe adapter(Recommended) Apple Airport Card adapted to M.2 B+M Key(same as what NVMe SSDs run off) Apple Airport Card adapted to M.2 A+E Key(same as what intel wireless cards run off) Full sized PCIe Wireless card Currently supported chipsets: BCM943602CDP BCM943602CD BCM94360CD BCM94331CD(may need to force the kext to load for Catalina) BCM94360CS2 BCM943602CS BCM94360CSAX BCM94360CS BCM94352Z BCM94350ZAE Supported(Full sized PCIe Wireless card) BCM94360CD(ABGN+AC): Fenvi FV T919 (BT 4.0) Fenvi AC1900(no bluetooth, recently discontinued) TP-LINK Archer T9E AC1900(no bluetooth) TP-LINK Archer T8E(no bluetooth) RNX-AC1900PCE(no bluetooth) ASUS PCE-AC66(no bluetooth) ASUS PCE-AC68(no bluetooth) BCM94360CS2(ABGN+AC): Fenvi FV-HB1200(BT 4.0) AWD Wireless LAN Card(BCM94360CS2) BCM94352(ABGN+AC): TP-LINK Archer T6E(no bluetooth) Rosewill RNX-AC1300PCE(no bluetooth) ASUS PCE-AC56(no bluetooth) All cards presented here besides the Apple Airport and Fenvi cards require the following: AirportBrcmFixup BrcmPatchRAM BrcmBluetoothInjector BrcmFirmwareData BrcmPatchRAM fix: BrcmPatchRAM3 for 10.14+ (must be paired with BrcmBluetoothInjector) BrcmPatchRAM2 for 10.11-10.14 BrcmPatchRAM for 10.10 or older Older Models(Unsupported in Mojave) With these models, you'll need to reinject the old plugin your wireless card used in High Sierra to work in Mojave. There are a couple of different kexts to do this but generally, we recommend avoiding this card unless absolutely necessary. Note: Injecting the kext into macOS Catalina is even more unstable Atheros 9380: TP-Link TL-WDN4800 Rosewill N900 Atheros AR5BDT92 Atheros 9280: Dell DW 1525 Gemtek WPEA-113N Atheros AR9287: Nexxt Solutions Saros 300 (APLDT300N1) TP-LINK TL-WN881ND AR9285: AzureWave AW-NE106 Rosewill RNX-N150PCe v1 SMC SMCWPCIeS-N TP-LINK TL-WN781ND v1 ZyXEL NWD3105 "},"types-of-wireless-card/mpcie.html":{"url":"types-of-wireless-card/mpcie.html","title":"mini PCIe","keywords":"","body":"So mini PCIe is most useful for users with older systems that don't have M.2 based wireless. With mini PCIe you have a couple of options: Half Sized mini PCIe Full sized mini PCIe Apple Airport Card adapted to a full sized mini PCIe For older laptop users you'll generally be limited to half sized mini PCIe wireless cards due to space constraints but for desktop users, it's recommended to buy an Apple Airport Card with an adapter. The reason being is this avoids issues with PCI IDs not matching and not having drivers flags be set off, solutions are to force load the accompanying kext or modify the kext's PCI ID list to support your model. For users of the half height have a couple options: Supported: BCM94360HMB (ABGN+AC, BT 4.0, 3x3:3): AzureWave AW-CB160H Alpha Networks WMC-AC01 Arcadyan WN8833B-AC Gemtek WMDB-150AC Unex DAXB-81 Wistron NeWeb DNXB-C1 BCM94352HMB (ABGN+AC,BT 4.0, 2x2:2): AzureWave AW-CE123H Dell DW1550 HP TPC-Q013 Lenovo Lite-On WCBN606BH All cards presented here require the following: AirportBrcmFixup BrcmPatchRAM BrcmBluetoothInjector BrcmFirmwareData BrcmPatchRAM fix: BrcmPatchRAM3 for 10.14+ (must be paired with BrcmBluetoothInjector) BrcmPatchRAM2 for 10.11-10.14 BrcmPatchRAM for 10.10 or older Older models(Not natively supported in Mojave) With these models, you'll need to reinject the old plugin your wireless card used in High Sierra to work in Mojave. There are a couple of different kexts to do this but generally, we recommend avoiding these wireless cards. Note: Injecting the kext into macOS Catalina is even more unstable BCM943224 HMS/HMB (ABGN, 2x2:2) Dell DW1520 HP Gemtek WMIB-275N Lenovo Gemtek WMIB-275N Pegatron UPWL6024 AR9280 (ABGN, 2x2:2) Atheros AR5BHB92 Atheros AR5BXB92 AzureWave AW-NE772 AzureWave AW-NE773 Compex WLE200N5-23-ESD Compex WLE200NX Dell DW1515 HP U98Z044 HP Lite-On WN6502AH Silex SX-PCEAN SparkLAN WPEA-110N SparkLAN WPEA-111N Ubiquiti Networks SR71-E Unex DNXA-92 AR9380 (ABGN, 3x3:3) Alpha Networks WMC-ND02 Killer Wireless-N 1103 Atheros AR5BHB112 Atheros AR5BXB112 Compex WLE300N5-22 7A0000 Compex WLE300NX 6A0000 HP U98Z081 JJPlus JWX6051 Lite-On WN6508A SparkLAN WPEA-127N SparkLAN WPEA-128N Tehnoetic TET-N450DB Vikings Atheros450 Wistron NeWeb DNXA-G1 "},"types-of-wireless-card/m2.html":{"url":"types-of-wireless-card/m2.html","title":"M.2","keywords":"","body":"M.2 based wireless cards get into a fun little realm of manufacturer lock-in, specifically that your manufacturer may have a whitelist that only supports their brand of wireless cards(Lenovo is the biggest culprit of this). Do your research on your hardware to see if there's a whitelist. The other thing to keep in mind is that M.2 wireless cards come in 2 variant: A Key E Key Do your research to see what slot your hardware has(and don't mix up E key with mini PCIe). M.2 Interface: BCM94360NG: Fenvi BCM94360NG(A+E Key, natively supported as based off of genuine Apple Airport card) BCM943602: Dell DW1830 (A+E Key, quite wide so make sure your laptop has room) BCM94352Z: Dell DW1560 (A+E Key) Lenovo Lite-On WCBN802B(04X6020)(E Key) AzureWave AW-CB162NF(A+E Key) BCM94350ZAE: Lenovo Foxconn T77H649(A+E Key) Lite-On WCBN808B(A+E Key) Dell DW1820A (A+E Key) Note: The DW1820A doesn't support power management correctly so needs to be disabled via property injection. This is not guaranteed to fix support on laptops, do not buy just for a laptop: pci-aspm-default | Data | To find the PciRoot, run gfxutil in terminal and look for 14e4:43a3(PCI ID for the 1820A): All cards presented here besides the Fenvi require the following: AirportBrcmFixup BrcmPatchRAM BrcmBluetoothInjector BrcmFirmwareData BrcmPatchRAM fix: BrcmPatchRAM3 for 10.14+ (must be paired with BrcmBluetoothInjector) BrcmPatchRAM2 for 10.11-10.14 BrcmPatchRAM for 10.10 or older "},"types-of-wireless-card/Express.html":{"url":"types-of-wireless-card/Express.html","title":"Express Card","keywords":"","body":"Express cards So this is also a really bad idea but I accidentally found Express Card-based wireless cards searching for other cards: Up to High Sierra: Atheros AR9280 Ubiquiti Networks SR71-X (802.11 a/b/g/n, 2x2) With this model, you'll need to reinject the old AirPortAtheros40 plugin used in High Sierra to work in Mojave "},"types-of-wireless-card/usb.html":{"url":"types-of-wireless-card/usb.html","title":"USB","keywords":"","body":"While the worst options for wireless, this is one that not many people can choose to avoid due to either their wireless cards being soldered or not wanting to break their warranty to replace their card. Things to keep in mind: Features like AirDrop, Handoff, etc likely won't work Not guaranteed to work 100% Sleep can easily break Need a separate adapter for Bluetooth Most cards use a poorly made 32bit app to get wifi working(and you're reliant on the manufacturer to update their app for Catalina) No Network support in recovery And with all these issues it's quite hard to recommend a USB wireless card but there still is hope: Wireless-USB-Adapter-Clover While not perfect this might just be as close as we can get to \"good\" USB wireless thanks to it being kept up-to-date by Chris1111(So no 32bit app crap) and supports a large variety of Chipsets. I've listed out all the chipsets that have been known good and you can see if yours matches any of these chipsets RTL8188CUS: Asus USB-N 10 Nano/N150 TRENDnet N150 Micro RTL8192CU: EDIMAX- EW-7722UTn V2 EDIMAX N300 RTL8192EU: TL-WN823N v2 TL-WN823N v3 TL-WN821N v6 RTL8188EUS: TL-WN725N v3 TL-WN722N v3 RTL8811AU: Archer T2U NANO RTL8812BU: Archer T4U V3 RTL8814AU: Archer T9UH V2 RTL8812AU: Linksys WUSB6300 USB Wireless Utility Just like Wireless-USB-Adapter-Clover, WIFI-Dlink allows support for quite a few Mediatek/Ralink cards but due to being a 32bit app is unsupported on AMD systems. There's a newer version for Catalina which is 64 bit based perfect for AMD systems as well: WIFI-Dlink Catalina-Panel RT3572 RT3072 RT3070 RT3573 MT7610 MT7610 MT7610 RT5370 RT2870 RT3071 RT2770 RT3573 RT5572 RT3573 RT3573 RT5572 RT3572 "},"misc/bluetooth.html":{"url":"misc/bluetooth.html","title":"Bluetooth","keywords":"","body":"Bluetooth Support So with Bluetooth in macOS, it can become quite confusing on what actually is supported and what's not. Supported bluetooth chipset Well I was orginally going to manually find every supported model but user MarkVillacampa has done this for us! Yay I get to be lazy for once! Bluetooth List (For the amount of work this boy saved me, he deserves a medal) So why does my Bluetooth work my intel card? Well, it's a bit complicated and involves looking at IOkit and how it handles different devices. Bluetooth is actually quite simple in how it interacts with the system and thanks to being generally run off the USB rail, generic devices can easily hook into IOKit and act semi natively(usually with the loss of Handoff, Airdrop, etc). Wifi, on the other hand, is quite a bit more complicated as there's per device/family firmware that needs to be loaded and so the Broadcom/Atheros Firmware obviously do nothing when in the presence of intel So if you rebooted from Windows into macOS, the firmware on the card may have stuck on allowing you temporary bluetooth support on you're card. To make sure this sticks around, you can use a firmware injecting kext like that found on the IntelBluetoothFirmware repo Bluetooth in the BIOS So to support Bluetooth in the BIOS, you'll need a Bluetooth device that supports HID Proxy. The idea of HID proxy is to create a minimal bluetooth stack that is then used into tricking the BIOS into thinking your bluetooth keyboard is actually a USB one, as there aren't any firmwares that actually implement Bluetooth. All of Apple's cards natively support this feature but you'll need to search on a case-by-case basis with other devices Retaining Bluetooth keys between OSes This is mainly for devices that only have 1 Bluetooth profile which can be a bit frustrating when switching between OSes, we'll our local Frewt boll has saved us again! Dual Booting with Bluetooth Devices "},"misc/credit.html":{"url":"misc/credit.html","title":"Credit","keywords":"","body":"Credit No good guide is made by one man, here's credit to those who've helped out: Midi Hackintosh FAQ: Wifi Overall corrections Correction on BCM94352Z chipset DhinakG Corrections regarding DW1830 Fewt Added FV-HB1200 Sources: Intel Wireless List Wireless USB Adapter Clover Tonymacx86's Broadcom Wifi/Bluetooth Guide WikiDevi M.2 Interface Tonymacx86's Bluetooth list "}}